/** The state of the UI elements. */
export declare type Permission = "accesstoken";
/** The Extension type. */
export declare type ExtensionType = "panel" | "properties" | "settings" | "popover" | "page";
/** Possible events back from the Trimble Connect Web application to Trimble Connect project extension. */
export declare type ExtensionEvents = "extension.command" | "extension.accessToken" | "extension.userSettingsChanged";
/** The Extension source */
export interface ExtensionSource {
    /** The Extension identifier */
    id?: string;
    /** The type of the Extension */
    type?: ExtensionType;
    /** The URL of the Extension */
    url?: string;
    /** @deprecated same as url */
    pluginUrl?: string;
    /** The URL of the info page  */
    infoUrl?: string;
    /** The title of the Extension */
    title?: string;
    /** The icon of the Extension */
    icon?: string;
    /** The badge of the Extension */
    badge?: string;
    /** The height */
    height?: string;
}
/** The Extension configuration. */
export interface ExtensionSetting extends ExtensionSource {
    /** The URL of the Extension manifest */
    manifestUrl?: string;
    /** Whether the Extension is enabled */
    enabled?: boolean;
}
/** Route key for navigating the Trimble Connect Web application to a specific route */
export declare type IRouteKey = "settings-extensions" | "settings-details";
/**
 * The API for operations related to the Trimble Connect web plug-ins.
 */
export interface ExtensionAPI {
    /** Configures the Extension.
     *  @param config - The plug-in configuration
     *  @returns The awaitable task
     */
    configure(config: ExtensionSource): Promise<boolean>;
    /** Broadcasts a message to other plug-ins.
     *  @param message - The message to be broadcast
     *  @returns The awaitable task
     */
    broadcast(message: any): Promise<boolean>;
    /** Requests permission to get the accessToken from the application.
     * @returns The status for requested permission.
     */
    requestPermission(permission: Permission): Promise<string>;
    /** Set the extension status.
     *  @param message - The extension status message of the Trimble Connect project extension.
     *  @returns The awaitable task
     */
    setStatusMessage(message: string): Promise<boolean>;
    /** Get the current status message of the Trimble Connect project extension.
     *  @depcrecated Will be removed in the future release.
     *  @returns The awaitable task
     */
    getStatusMessage(): Promise<string>;
    /** Configures the Trimble Connect project extension.
     *  @deprecated Use {@link requestPermission} instead.
     *  @param permission - type of the permssion. For now only accesstoken is available.
     *  @returns The awaitable task
     */
    getPermission(permission: Permission): Promise<string>;
    /** Go to the extension settings page from the Trimble Connect project extension.
     *  @deprecated Use {@link goTo} instead.
     *  @returns The awaitable task
     */
    goToSettings(): Promise<boolean>;
    /** Go to a specific route/page from the Trimble Connect project extension.
     *  @returns The awaitable task
     */
    goTo(routeKey: IRouteKey): Promise<boolean>;
    /** Host metadata */
    host?: {
        /** An UI friendly display name */
        name: string;
    };
}
